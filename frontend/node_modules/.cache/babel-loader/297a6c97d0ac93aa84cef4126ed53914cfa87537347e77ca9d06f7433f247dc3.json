{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    product: [],\n    cart: {\n      items: []\n    },\n    isAuthenticated: false,\n    token: ''\n  },\n  mutations: {\n    initializeStore(state) {\n      // checks if local storage is accessed with an item called cart\n      if (localStorage.getItem('cart')) {\n        state.cart = JSON.parse(localStorage.getItem('cart'));\n      }\n      // else creates it\n      else {\n        localStorage.setItem('cart', JSON.stringify(state.cart));\n      }\n    },\n    addToCart(state, item) {\n      console.log(state.cart.items.product);\n      // to check if item is already in cart\n      const exists = state.cart.items.filter(i => i.product.product_id === item.product.product_id);\n\n      // length is not zero then we know item already exists in cart\n      if (exists.length) {\n        // increments quantity of already existing item\n        exists[0].quantity = parseInt(exists[0].quanity) + parseInt(item.quanity);\n      }\n      // if item not in cart, it is added to cart\n      else {\n        state.cart.items.push(item);\n      }\n      localStorage.setItem('cart', JSON.stringify(state.cart));\n    }\n  },\n  actions: {},\n  modules: {}\n});","map":{"version":3,"names":["createStore","state","product","cart","items","isAuthenticated","token","mutations","initializeStore","localStorage","getItem","JSON","parse","setItem","stringify","addToCart","item","console","log","exists","filter","i","product_id","length","quantity","parseInt","quanity","push","actions","modules"],"sources":["C:/Users/yara/Desktop/HighTech software project/DefinetlyNotAmazon/frontend/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\r\n\r\nexport default createStore({\r\n  state: {\r\n    product: [],\r\n    cart: {\r\n        items: [],\r\n    },\r\n    isAuthenticated: false,\r\n    token: '',\r\n  },\r\n  mutations: {\r\n    initializeStore(state) {\r\n      // checks if local storage is accessed with an item called cart\r\n      if (localStorage.getItem('cart')) {\r\n        state.cart = JSON.parse(localStorage.getItem('cart'))\r\n      } \r\n      // else creates it\r\n      else {\r\n        localStorage.setItem('cart', JSON.stringify(state.cart))\r\n      }\r\n    },\r\n  addToCart(state, item) {    \r\n\r\n\r\n    console.log(state.cart.items.product)\r\n    // to check if item is already in cart\r\n    const exists = state.cart.items.filter(i => i.product.product_id === item.product.product_id)\r\n\r\n\r\n    // length is not zero then we know item already exists in cart\r\n    if (exists.length) {\r\n      // increments quantity of already existing item\r\n      exists[0].quantity = parseInt(exists[0].quanity) + parseInt(item.quanity)\r\n    } \r\n    // if item not in cart, it is added to cart\r\n    else {\r\n      state.cart.items.push(item)\r\n    }\r\n    localStorage.setItem('cart', JSON.stringify(state.cart))\r\n  }\r\n},\r\n\r\n  actions: {\r\n  },\r\n  modules: {\r\n  }\r\n})\r\n\r\n\r\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,MAAM;AAElC,eAAeA,WAAW,CAAC;EACzBC,KAAK,EAAE;IACLC,OAAO,EAAE,EAAE;IACXC,IAAI,EAAE;MACFC,KAAK,EAAE;IACX,CAAC;IACDC,eAAe,EAAE,KAAK;IACtBC,KAAK,EAAE;EACT,CAAC;EACDC,SAAS,EAAE;IACTC,eAAe,CAACP,KAAK,EAAE;MACrB;MACA,IAAIQ,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,EAAE;QAChCT,KAAK,CAACE,IAAI,GAAGQ,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;MACvD;MACA;MAAA,KACK;QACHD,YAAY,CAACI,OAAO,CAAC,MAAM,EAAEF,IAAI,CAACG,SAAS,CAACb,KAAK,CAACE,IAAI,CAAC,CAAC;MAC1D;IACF,CAAC;IACHY,SAAS,CAACd,KAAK,EAAEe,IAAI,EAAE;MAGrBC,OAAO,CAACC,GAAG,CAACjB,KAAK,CAACE,IAAI,CAACC,KAAK,CAACF,OAAO,CAAC;MACrC;MACA,MAAMiB,MAAM,GAAGlB,KAAK,CAACE,IAAI,CAACC,KAAK,CAACgB,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACnB,OAAO,CAACoB,UAAU,KAAKN,IAAI,CAACd,OAAO,CAACoB,UAAU,CAAC;;MAG7F;MACA,IAAIH,MAAM,CAACI,MAAM,EAAE;QACjB;QACAJ,MAAM,CAAC,CAAC,CAAC,CAACK,QAAQ,GAAGC,QAAQ,CAACN,MAAM,CAAC,CAAC,CAAC,CAACO,OAAO,CAAC,GAAGD,QAAQ,CAACT,IAAI,CAACU,OAAO,CAAC;MAC3E;MACA;MAAA,KACK;QACHzB,KAAK,CAACE,IAAI,CAACC,KAAK,CAACuB,IAAI,CAACX,IAAI,CAAC;MAC7B;MACAP,YAAY,CAACI,OAAO,CAAC,MAAM,EAAEF,IAAI,CAACG,SAAS,CAACb,KAAK,CAACE,IAAI,CAAC,CAAC;IAC1D;EACF,CAAC;EAECyB,OAAO,EAAE,CACT,CAAC;EACDC,OAAO,EAAE,CACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}