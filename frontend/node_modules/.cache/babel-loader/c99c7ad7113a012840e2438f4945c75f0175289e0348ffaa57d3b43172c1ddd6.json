{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'SearchView',\n  data() {\n    return {\n      products: [],\n      query: ''\n    };\n  },\n  mounted() {\n    document.title = 'Search | HighTech';\n    let url = window.location.search.substring(1);\n    let params = new URLSearchParams(url);\n    console.log(\"wtf1\");\n    if (params.get('query')) {\n      console.log(\"wtf1\");\n      this.query = params.get('query');\n      this.performSearch();\n    }\n  },\n  methods: {\n    performSearch() {\n      // const in = this.$route.params\n      console.log(\"hello\");\n      axios.post(`http://localhost:5000/search/${query}`, {\n        'query': this.query\n      }).then(response => {\n        this.products = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAgCA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACXC,IAAI,EAAE,YAAY;EAElBC,IAAI,GAAG;IACH,OAAO;MACHC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE;IACX;EACJ,CAAC;EACDC,OAAO,GAAG;IACNC,QAAQ,CAACC,KAAI,GAAI,mBAAkB;IAEnC,IAAIC,GAAE,GAAIC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAACC,SAAS,CAAC,CAAC;IAC5C,IAAIC,MAAK,GAAI,IAAIC,eAAe,CAACN,GAAG;IAEpCO,OAAO,CAACC,GAAG,CAAC,MAAM;IAClB,IAAGH,MAAM,CAACI,GAAG,CAAC,OAAO,CAAC,EAAE;MACpBF,OAAO,CAACC,GAAG,CAAC,MAAM;MAClB,IAAI,CAACZ,KAAI,GAAIS,MAAM,CAACI,GAAG,CAAC,OAAO;MAE/B,IAAI,CAACC,aAAa,EAAC;IACvB;EACJ,CAAC;EACDC,OAAO,EAAE;IACLD,aAAa,GAAG;MACZ;MACAH,OAAO,CAACC,GAAG,CAAC,OAAO;MACnBhB,KAAI,CACHoB,IAAI,CAAE,gCAA+BhB,KAAM,EAAC,EAAE;QAAC,OAAO,EAAE,IAAI,CAACA;MAAK,CAAC,EACnEiB,IAAI,CAACC,QAAO,IAAK;QAEd,IAAI,CAACnB,QAAO,GAAImB,QAAQ,CAACpB,IAAG;MAChC,CAAC,EACAqB,KAAK,CAACC,KAAI,IAAK;QACZT,OAAO,CAACC,GAAG,CAACQ,KAAK;MACrB,CAAC;IACL;EACJ;AACJ","names":["axios","name","data","products","query","mounted","document","title","url","window","location","search","substring","params","URLSearchParams","console","log","get","performSearch","methods","post","then","response","catch","error"],"sourceRoot":"","sources":["C:\\Users\\ASUS\\Coding\\Python\\DefinetlyNotAmazon\\frontend\\src\\views\\SearchView.vue"],"sourcesContent":["<template>\r\n    <div class=\"page-search\">\r\n        <div class=\"column is-multiline\">\r\n            <div class=\"column is-full\">\r\n                <h1 class=\"title\">Search</h1>\r\n\r\n                <h2 class=\"is-size-5 has-text-grey\">Search term: \"{{ query }}\"</h2>\r\n            </div>     \r\n\r\n            <div class=\"cards\">\r\n                <div class=\"card mb-4\"\r\n                    v-for=\"product in products\"\r\n                    v-bind:key=\"product.product_id\"\r\n                >\r\n                    <div class=\"box\">\r\n                    <figure class=\"image mb--4\">\r\n                        <img v-bind:src=\"product.image\">\r\n                    </figure>\r\n                    <br>\r\n                    <h3 class=\"is-size-10\">{{ product.name }}</h3>\r\n                    <p class=\"is-size-5 has-text-grey\"> ${{ product.price }}</p>\r\n                    <br>\r\n                    <div class=\"button is-info is-small is-rounded\">Vew details</div>\r\n                    <router-link v-bind:to=\"{path:'product/'+product.product_id, params:{'id':product.product_id}}\" class=\"button is-info is-small is-rounded\">View details</router-link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n    name: 'SearchView',\r\n    \r\n    data() {\r\n        return {\r\n            products: [],\r\n            query: ''\r\n        }\r\n    },\r\n    mounted() {\r\n        document.title = 'Search | HighTech'\r\n\r\n        let url = window.location.search.substring(1)\r\n        let params = new URLSearchParams(url)\r\n\r\n        console.log(\"wtf1\")\r\n        if(params.get('query')) {\r\n            console.log(\"wtf1\")\r\n            this.query = params.get('query')\r\n\r\n            this.performSearch()\r\n        }\r\n    },\r\n    methods: {\r\n        performSearch() {\r\n            // const in = this.$route.params\r\n            console.log(\"hello\")\r\n            axios\r\n            .post(`http://localhost:5000/search/${query}`, {'query': this.query})\r\n            .then(response => {\r\n                \r\n                this.products = response.data      \r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}