{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    cart: {\n      items: []\n    },\n    isAuthenticated: false,\n    token: ''\n  },\n  mutations: {\n    initializeStore(state) {\n      // checks if local storage is accessed with an item called cart\n      if (localStorage.getItem('cart')) {\n        state.cart = JSON.parse(localStorage.getItem('cart'));\n      }\n      // else creates it\n      else {\n        localStorage.setItem('cart', JSON.stringify(state.cart));\n      }\n    }\n  },\n  addToCart(state, item) {\n    let product = [];\n    const id_slug = this.$route.params.id;\n    axios.get(`http://localhost:5000/product/${id_slug}`).then(response => {\n      product = response.data;\n      console.log(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n\n    // to check if item is already in cart\n    const exists = state.cart.items.filter(i => i.product.product_id === item.product.product_id);\n\n    // length is not zero then we know item already exists in cart\n    if (exists.length) {\n      // increments quantity of already existing item\n      exists[0].quantity = parseInt(exists[0].quanity) + parseInt(item.quanity);\n    }\n    // if item not in cart, it is added to cart\n    else {\n      state.cart.item.push(item);\n    }\n    localStorage.setItem('cart', JSON.stringify(state.cart));\n  },\n  actions: {},\n  modules: {}\n});","map":{"version":3,"names":["createStore","state","cart","items","isAuthenticated","token","mutations","initializeStore","localStorage","getItem","JSON","parse","setItem","stringify","addToCart","item","product","id_slug","$route","params","id","axios","get","then","response","data","console","log","catch","error","exists","filter","i","product_id","length","quantity","parseInt","quanity","push","actions","modules"],"sources":["C:/Users/yara/Desktop/HighTech software project/DefinetlyNotAmazon/frontend/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\r\n\r\nexport default createStore({\r\n  state: {\r\n    cart: {\r\n        items: [],\r\n    },\r\n    isAuthenticated: false,\r\n    token: '',\r\n  },\r\n  mutations: {\r\n    initializeStore(state) {\r\n      // checks if local storage is accessed with an item called cart\r\n      if (localStorage.getItem('cart')) {\r\n        state.cart = JSON.parse(localStorage.getItem('cart'))\r\n      } \r\n      // else creates it\r\n      else {\r\n        localStorage.setItem('cart', JSON.stringify(state.cart))\r\n      }\r\n    }\r\n  },\r\n  addToCart(state, item) {\r\n\r\n      let product = []\r\n      const id_slug = this.$route.params.id\r\n      \r\n      axios.get(`http://localhost:5000/product/${id_slug}`)\r\n      .then(response => {\r\n        product = response.data\r\n        console.log(response.data)\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n\r\n    // to check if item is already in cart\r\n    const exists = state.cart.items.filter(i => i.product.product_id === item.product.product_id)\r\n\r\n\r\n    // length is not zero then we know item already exists in cart\r\n    if (exists.length) {\r\n      // increments quantity of already existing item\r\n      exists[0].quantity = parseInt(exists[0].quanity) + parseInt(item.quanity)\r\n    } \r\n    // if item not in cart, it is added to cart\r\n    else {\r\n      state.cart.item.push(item)\r\n    }\r\n    localStorage.setItem('cart', JSON.stringify(state.cart))\r\n  },\r\n\r\n  actions: {\r\n  },\r\n  modules: {\r\n  }\r\n})\r\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,MAAM;AAElC,eAAeA,WAAW,CAAC;EACzBC,KAAK,EAAE;IACLC,IAAI,EAAE;MACFC,KAAK,EAAE;IACX,CAAC;IACDC,eAAe,EAAE,KAAK;IACtBC,KAAK,EAAE;EACT,CAAC;EACDC,SAAS,EAAE;IACTC,eAAe,CAACN,KAAK,EAAE;MACrB;MACA,IAAIO,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,EAAE;QAChCR,KAAK,CAACC,IAAI,GAAGQ,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;MACvD;MACA;MAAA,KACK;QACHD,YAAY,CAACI,OAAO,CAAC,MAAM,EAAEF,IAAI,CAACG,SAAS,CAACZ,KAAK,CAACC,IAAI,CAAC,CAAC;MAC1D;IACF;EACF,CAAC;EACDY,SAAS,CAACb,KAAK,EAAEc,IAAI,EAAE;IAEnB,IAAIC,OAAO,GAAG,EAAE;IAChB,MAAMC,OAAO,GAAG,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;IAErCC,KAAK,CAACC,GAAG,CAAE,iCAAgCL,OAAQ,EAAC,CAAC,CACpDM,IAAI,CAACC,QAAQ,IAAI;MAChBR,OAAO,GAAGQ,QAAQ,CAACC,IAAI;MACvBC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACC,IAAI,CAAC;IAC5B,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;MACdH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IACpB,CAAC,CAAC;;IAEJ;IACA,MAAMC,MAAM,GAAG7B,KAAK,CAACC,IAAI,CAACC,KAAK,CAAC4B,MAAM,CAACC,CAAC,IAAIA,CAAC,CAAChB,OAAO,CAACiB,UAAU,KAAKlB,IAAI,CAACC,OAAO,CAACiB,UAAU,CAAC;;IAG7F;IACA,IAAIH,MAAM,CAACI,MAAM,EAAE;MACjB;MACAJ,MAAM,CAAC,CAAC,CAAC,CAACK,QAAQ,GAAGC,QAAQ,CAACN,MAAM,CAAC,CAAC,CAAC,CAACO,OAAO,CAAC,GAAGD,QAAQ,CAACrB,IAAI,CAACsB,OAAO,CAAC;IAC3E;IACA;IAAA,KACK;MACHpC,KAAK,CAACC,IAAI,CAACa,IAAI,CAACuB,IAAI,CAACvB,IAAI,CAAC;IAC5B;IACAP,YAAY,CAACI,OAAO,CAAC,MAAM,EAAEF,IAAI,CAACG,SAAS,CAACZ,KAAK,CAACC,IAAI,CAAC,CAAC;EAC1D,CAAC;EAEDqC,OAAO,EAAE,CACT,CAAC;EACDC,OAAO,EAAE,CACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}