{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"page-product\"\n};\nconst _hoisted_2 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" <figure class=\\\"image mb-6\\\"> \"), _createElementVNode(\"img\", {\n    src: $data.product.get(0).image\n  }, null, 8 /* PROPS */, _hoisted_2), _createCommentVNode(\" </figure> \")]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAc;;;uBAAzBC,oBAIM,OAJNC,UAIM,GAHJC,sDAAoC,EAChCC,oBAAwC;IAA3BC,GAAG,EAAEC,aAAO,CAACC,GAAG,IAAIC;uCACrCL,kCAAkB","names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","src","$data","get","image"],"sourceRoot":"","sources":["C:\\Users\\ASUS\\Coding\\Python\\DefinetlyNotAmazon\\frontend\\src\\views\\ProductView.vue"],"sourcesContent":["<template>\r\n  <div class=\"page-product\">\r\n    <!-- <figure class=\"image mb-6\"> -->\r\n        <img  v-bind:src=\"product.get(0).image\">\r\n    <!-- </figure> -->\r\n  </div>\r\n  \r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport { toast } from 'bulma-toast'\r\n\r\nexport default {\r\n    name: 'ProductView',\r\n    data() {\r\n        return {\r\n            product: [],\r\n            quantity: 1\r\n        }\r\n    }, \r\n    mounted() {\r\n    this.getProduct()\r\n    },\r\n    methods: {\r\n        getProduct() {\r\n          const id_slug = this.$route.params.id\r\n          console.log(id_slug)\r\n          axios.get(`http://localhost:5000/product/${id_slug}`)\r\n          .then(response => {\r\n            this.product = response.data\r\n            console.log(response.data)\r\n          })\r\n          .catch(error => {\r\n            console.log(error)\r\n          })\r\n\r\n          // changing tab name\r\n          document.title = this.product.name + ' | HighTech'\r\n\r\n        },\r\n        addToCart() {\r\n            // correct quantity value if any changes happen to it\r\n            if (isNaN(this.quantity || this.quantity < 1)) {\r\n                this.quantity = 1\r\n            }\r\n\r\n            const item = {\r\n                product: this.product,\r\n                quantity: this.quantity\r\n            }\r\n\r\n            this.$store.commit('addToCart', item)\r\n\r\n            toast ({\r\n                message: 'The product was added to cart',\r\n                type: 'is-info',\r\n                dismissible: true,\r\n                pauseOnHover: true,\r\n                duration: 2000,\r\n                position: 'bottom-right'\r\n            })\r\n        },\r\n       \r\n    }\r\n}\r\n\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}